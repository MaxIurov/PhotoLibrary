@model PagedList.IPagedList<BOL.Photo>
@using PagedList.Mvc;
@using PhotoLibrary.Helpers
@{
            ViewBag.Title = "Album";
}
<h2>Album</h2>
<hr />
<table style="border-collapse: separate; border-spacing: 10px;">
<tr>
    <th>
        @Html.Label("User Name")
    </th>
    <th>
        @Html.Label("Album Name")
    </th>
    <th>
        @Html.Label("Album Description")
    </th>
</tr>
    <tr>
        <td>
            @ViewBag.UserName
        </td>
        <td>
            @ViewBag.AlbumName
        </td>
        <td>
            @ViewBag.Description
        </td>
    </tr>
</table>
<div class="col-md-12">
    Link to this Album: <input type="text" id="getLink" value="@ViewBag.DirectLink" />
    <button id="getLinkBtn" data-copytarget="#getLink">Get Link</button>
</div>
<hr />
@using (Html.BeginForm())
{
    <table>
        <tr>
            <th style="border: 2px solid black; text-align: center; width: 25%">
                @Html.ActionLink("Photo Name", "Album",
            new { AlbumID = ViewBag.AlbumID, sortOrder = "Name", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th style="border: 2px solid black; text-align: center; width: 20%">
                @Html.ActionLink("Time Taken", "Album",
            new { AlbumID = ViewBag.AlbumID, sortOrder = "Time", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th style="border: 2px solid black; text-align: center; width: 15%;">
                @Html.ActionLink("Flash Used", "Album",
            new { AlbumID = ViewBag.AlbumID, sortOrder = "Flash", CurrentSort = ViewBag.CurrentSort })
            </th>
            <th style="border: 2px solid black; text-align: center; width: 30%;">
                @Html.Label("Image")
            </th>
            <th style="border: 2px solid black; text-align: center; width: 10%;">
            </th>

        </tr>
        @foreach (var item in Model)
        {
            <tr>
                <td style="border: 2px solid black; text-align: center; word-wrap: break-word;">
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td style="border: 2px solid black; text-align: center; word-wrap: break-word;">
                    @Html.DisplayFor(modelItem => item.TimeTaken)
                </td>
                <td style="border: 2px solid black; text-align: center; word-wrap: break-word;">
                    @Html.DisplayFor(modelItem => item.Flash)
                </td>
                <td style="border: 2px solid black; text-align: center; word-wrap: break-word;">
                    @Html.Image(item, 1)
                </td>
                <td style="border: 2px solid black; text-align: center; word-wrap: break-word;">
                    @Html.ActionLink("Open", "ViewPhoto", new { PhotoID = item.PhotoID, AlbumID = ViewBag.AlbumID })
                </td>
            </tr>
        }
    </table>
    <br />
    <div id='Paging' style="text-align: center">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
        of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Album", new { AlbumID = ViewBag.AlbumID, page }))
    </div>
}
<p>
    @Html.ActionLink("Back to List", "Index")
</p>
<style type="text/css">
#getLinkBtn {
  position: relative;
}
#getLink {
    display:inline-block;
    width: 100%;
}
.copied::after {
  position: absolute;
  top: 12%;
  right: 110%;
  display: block;
  content: "copied";
  font-size: 1em;
  padding: 2px 3px;
  color: #fff;
  background-color: #22a;
  border-radius: 3px;
  opacity: 0;
  will-change: opacity, transform;
  animation: showcopied 1.5s ease;
}
@@keyframes showcopied {
  0% {
    opacity: 0;
    transform: translateX(100%);
  }
  70% {
    opacity: 1;
    transform: translateX(0);
  }
  100% {
    opacity: 0;
  }
}
</style>
<script>
    (function ()
    {
        document.body.addEventListener('click', copy, true);
        function copy(e)
        {
            var
                t = e.target,
                c = t.dataset.copytarget,
                inp = (c ? document.querySelector(c) : null);
            if (inp && inp.select)
            {
                inp.select();
                try {
                    document.execCommand('copy');
                    inp.blur();
                    t.classList.add('copied');
                    setTimeout(function () { t.classList.remove('copied'); }, 1500);
                }
                catch (err) {
                    alert('please press Ctrl+C to copy');
                }
            }
        }
    })();
</script>